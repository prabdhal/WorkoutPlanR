@using WorkoutPlannerWebApp.HelperMethods
@model WorkoutPlannerWebApp.ViewModels.CreateExerciseMyWorkoutProgramViewModel

@{
    ViewData["Title"] = "Create Workout Program";
}

<h1>My Workout Program</h1>

<div>
    <h4>@Model.WorkoutProgram.Name</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">@Html.DisplayNameFor(model => model.WorkoutProgram.Difficulty)</dt>
        <dd class = "col-sm-10">@Html.DisplayFor(model => model.WorkoutProgram.Difficulty)</dd>
        <dt class = "col-sm-2">@Html.DisplayNameFor(model => model.WorkoutProgram.ShortDescription)</dt>
        <dd class = "col-sm-10">@Html.DisplayFor(model => model.WorkoutProgram.ShortDescription)</dd>
        <dt class = "col-sm-2">@Html.DisplayNameFor(model => model.WorkoutProgram.CreatedOn)</dt>
        <dd class = "col-sm-10">@Model.WorkoutProgram.CreatedOn.ToString("MM/dd/yy hh:mm tt")</dd>
        <dt class = "col-sm-2">@Html.DisplayNameFor(model => model.WorkoutProgram.UpdatedOn)</dt>
        <dd class = "col-sm-10">@Model.WorkoutProgram.UpdatedOn.ToString("MM/dd/yy hh:mm tt")</dd>
        <dt class = "col-sm-2">@Html.DisplayNameFor(model => model.WorkoutProgram.LongDescription)</dt>
        <dd class = "col-sm-10">@Html.DisplayFor(model => model.WorkoutProgram.LongDescription)</dd>
        <dt class = "col-sm-2">@Html.DisplayNameFor(model => model.WorkoutProgram.Published)</dt>
        <dd class = "col-sm-10">@Html.DisplayFor(model => model.WorkoutProgram.Published)</dd>
    </dl>
    
    <h5>Add Exercise</h5>
    <hr />
    <table class="col-12 table table-striped table-bordered table-hover table-responsive">
    <caption>List of exercises</caption>
      <thead class="thead-dark">
        <tr>
          <th scope="col">#</th>
          <th scope="col">Exercise</th>
          <th scope="col">Sets x Reps</th>
          <th scope="col">Description</th>
          <th scope="col">Reference Link</th>
          <th scope="col"></th>
        </tr>
      </thead>
            @if (!Model.CustomExercises.Any())
            {
                <p>There are no exercises added for this program as of yet.</p>
            }
      <tbody> 
              @foreach (var exercise in Model.CustomExercises)
              {
                <tr>
                  <td>@exercise.Exercise.Name</td>
                    @if (@exercise.MaxRepetition == null)
                    {
                        <td>@exercise.Sets x @exercise.MinRepetition</td>
                    } else
                    {
                        <td>@exercise.Sets x @exercise.MinRepetition - @exercise.MaxRepetition</td>  
                    }
                  <td>@exercise.Exercise.Description</td>
                  <td>
                    @if (@exercise.Exercise.ReferenceLink != null){
                    <a href="@exercise.Exercise.ReferenceLink" target="_blank">How to perform @exercise.Exercise.Name</a>
                    } 
                  </td>
                  <td>
                    <form asp-action="DeleteExercise" asp-route-id="@exercise.Id">    
                      <button class="btn btn-danger">X</button>
                    </form>
                  </td>
                </tr>
              } 
        </tbody>
    </table>
</div>
      <br />
<hr />
<div class="row">
    <div class="col-12">
        <form asp-action="CreateExercise">
            <input asp-for="WorkoutProgram.Id" readonly hidden />

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="CustomExercise.ExerciseId" class="control-label"></label> 
                @Html.DropDownListFor(m => m.CustomExercise.ExerciseId, ViewBag.Exercises as SelectList, "-- Select Exercise --", htmlAttributes: new {@class = "form-control"})
                <span asp-validation-for="CustomExercise.ExerciseId" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <label asp-for="CustomExercise.Sets" class="control-label"></label>
                <input asp-for="CustomExercise.Sets" class="form-control" />
                <span asp-validation-for="CustomExercise.Sets" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <label asp-for="CustomExercise.MinRepetition" class="control-label"></label>
                <input asp-for="CustomExercise.MinRepetition" class="form-control" />
                <span asp-validation-for="CustomExercise.MinRepetition" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <label asp-for="CustomExercise.MaxRepetition" class="control-label"></label>
                <input asp-for="CustomExercise.MaxRepetition" class="form-control" />
                <span asp-validation-for="CustomExercise.MaxRepetition" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Add Exercise" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-action="Details" asp-route-id="@Model?.WorkoutProgram.Id" class="btn btn-success">Finish</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
